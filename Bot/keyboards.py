from aiogram.types import (
    InlineKeyboardMarkup, 
    InlineKeyboardButton,
    KeyboardButton, 
    ReplyKeyboardMarkup
)
from aiogram.utils.keyboard import InlineKeyboardBuilder
from Classes.user import UserProfile
from Classes.enums import Goal

def MainKeyboard() -> ReplyKeyboardMarkup:
    '''–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–ø–æ—Å–ª–µ /start)'''

    kb = ReplyKeyboardMarkup(
        resize_keyboard=True,
        keyboard=[
            [KeyboardButton(text="üìù –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ")], # –ø—Ä–æ—Ñ–∏–ª—å
            [KeyboardButton(text="ü•© –º–æ–π —Ä–∞—Ü–∏–æ–Ω")], # –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è
            [KeyboardButton(text="üìä –ú–æ—è –¥–∏–Ω–∞–º–∏–∫–∞")] # –≥—Ä–∞—Ñ–∏–∫ –≤–µ—Å–∞ –ø–æ –¥–Ω—è–º
        ]   
    )

    return kb

class ProfileKeyboards:

    @staticmethod
    def EditProfileKb() -> InlineKeyboardMarkup:
        kb = InlineKeyboardBuilder()
        
        for field_name, field in UserProfile.model_fields.items():
            if field_name != "user_id":
                kb.button(text=field.description, callback_data=f"edit_profile;{field_name}")
        
        kb.adjust(2)

        return kb.as_markup()
    
    @staticmethod
    def BackToEditProfileBtn() -> InlineKeyboardButton:
        return InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="edit_profile")

    @staticmethod
    def EditGenderKb(with_back_btn: bool = True) -> InlineKeyboardMarkup:
        kb = InlineKeyboardBuilder()
        kb.button(text="–ú—É–∂—Å–∫–æ–∏ÃÜ", callback_data="edit_profile;gender;m")
        kb.button(text="–ñ–µ–Ω—Å–∫–∏–∏ÃÜ", callback_data="edit_profile;gender;f")
        
        if with_back_btn:
            kb.add(ProfileKeyboards.BackToEditProfileBtn())

        return kb.as_markup()
    
    @staticmethod
    def EditGoalKb(with_back_btn: bool = True) -> InlineKeyboardMarkup:
        kb = InlineKeyboardBuilder()

        for goal in Goal: # –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ü–µ–ª–∏ (—Å–±—Ä–æ—Å\–Ω–∞–±–æ—Ä –≤–µ—Å–∞, –ó–û–ñ) –∏ –ø–æ–¥ –∫–∞–∂–¥—É—é –¥–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É
            kb.button(text=goal.description, callback_data=f"edit_profile;goal;{goal.index}")

        if with_back_btn:
            kb.add(ProfileKeyboards.BackToEditProfileBtn())

        return kb.as_markup()
    
    @staticmethod
    def RebuildMyRationBtn() -> InlineKeyboardButton:
        return InlineKeyboardButton(text="ü•© –ü–µ—Ä–µ—Å—Ç—Ä–æ–∏—Ç—å –º–æ–∏ÃÜ —Ä–∞—Ü–∏–æ–Ω", callback_data="rebuild_ration")
    
    @staticmethod
    def EditActivityKb(with_back_btn: bool = True) -> InlineKeyboardMarkup:
        kb = InlineKeyboardBuilder()
        kb.button(text="–î–∞", callback_data="edit_profile;activity;1")
        kb.button(text="–ù–µ—Ç", callback_data="edit_profile;activity;0")

        if with_back_btn:
            kb.add(ProfileKeyboards.BackToEditProfileBtn())

        return kb.as_markup()